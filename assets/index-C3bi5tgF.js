var y=Object.defineProperty;var E=(l,s,e)=>s in l?y(l,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):l[s]=e;var o=(l,s,e)=>E(l,typeof s!="symbol"?s+"":s,e);(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))t(r);new MutationObserver(r=>{for(const n of r)if(n.type==="childList")for(const i of n.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&t(i)}).observe(document,{childList:!0,subtree:!0});function e(r){const n={};return r.integrity&&(n.integrity=r.integrity),r.referrerPolicy&&(n.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?n.credentials="include":r.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function t(r){if(r.ep)return;r.ep=!0;const n=e(r);fetch(r.href,n)}})();class v{static async fetchUrl(s){const e="/slope_calc/"+s.replace(/^\/+/,"");try{const t=await fetch(e);if(!t.ok)throw new Error(`HTTP error! status: ${t.status} at ${e}`);return await t.text()}catch(t){throw console.error(`[Utils.fetchUrl] Error fetching "${e}":`,t),t}}}const S="slopecalc",m="segments",A=1,L=()=>new Promise((l,s)=>{const e=indexedDB.open(S,A);e.onupgradeneeded=()=>{const t=e.result;t.objectStoreNames.contains(m)||t.createObjectStore(m,{keyPath:"id"})},e.onsuccess=()=>l(e.result),e.onerror=()=>s(e.error)}),C=l=>g("readwrite",s=>s.put(l)),q=()=>g("readonly",l=>new Promise(s=>{const e=l.getAll();e.onsuccess=()=>s(e.result)})),w=()=>g("readwrite",l=>{l.clear()}),g=async(l,s)=>{const t=(await L()).transaction(m,l),r=s(t.objectStore(m));return await new Promise((n,i)=>{t.oncomplete=()=>n(),t.onerror=()=>i(t.error),t.onabort=()=>i(t.error)}),r},h={save:C,getAll:q,clear:w};class f{constructor(s){o(this,"segments",[]);this.segments=s}static async create(){const s=await h.getAll();return new f(s)}async addSegment(s){const{initialLength:e,finalLength:t,initialElevation:r,finalElevation:n}=s,i=(t-e)*1e3,a=n-r,u=i!==0?a/i:0,c={id:this.segments.length+1,initialLength:e,finalLength:t,initialElevation:r,finalElevation:n,distance:i,desnivel:a,slope:u};this.segments.push(c),await h.save(c)}getSegments(){return[...this.segments]}getTotalDesnivel(){return this.segments.reduce((s,e)=>s+e.desnivel,0)}getTotalDistance(){return this.segments.reduce((s,e)=>s+e.distance,0)}getAverageSlope(){const s=this.getTotalDistance();return s!==0?this.getTotalDesnivel()/s:0}async clearSegments(){this.segments=[],await h.clear()}}class H extends HTMLElement{constructor(){super(...arguments);o(this,"submitHandler",e=>this.onSubmit(e));o(this,"clearFieldsHandler",()=>this.onClearFields());o(this,"clearAllHandler",()=>this.onClearAll())}async connectedCallback(){const e=await v.fetchUrl("form.html");this.innerHTML=e;const t=this.querySelector("#form");Array.from(t.querySelectorAll("custom-input")).forEach(a=>{if(a.hasAttribute("required")&&(a.validator=c=>({valid:c.trim().length>0,message:"Este campo es obligatorio"})),a.getAttribute("data-validate")==="nonEmpty"){const c=a.getAttribute("data-error")||"No puede quedar vacío";a.validator=d=>({valid:d.trim()!=="",message:c})}}),t.addEventListener("submit",this.submitHandler),t.querySelector(".form-button-delete").addEventListener("click",this.clearFieldsHandler),t.querySelector("#deleteAll").addEventListener("click",this.clearAllHandler)}disconnectedCallback(){const e=this.querySelector("#form");if(e){e.removeEventListener("submit",this.submitHandler);const t=e.querySelector(".form-button-delete");t&&t.removeEventListener("click",this.clearFieldsHandler);const r=e.querySelector("#deleteAll");r&&r.removeEventListener("click",this.clearAllHandler)}}onSubmit(e){e.preventDefault();const t=this.querySelector("#form"),r=Array.from(t.querySelectorAll("custom-input"));let n=!0;if(r.forEach(d=>{d.validate()||(n=!1)}),!n){alert("No puede haber campos vacíos.");return}const[i,a,u,c]=r.map(d=>Number(d.value));this.dispatchEvent(new CustomEvent("segment-submitted",{bubbles:!0,composed:!0,detail:{initialLength:i,finalLength:a,initialElevation:u,finalElevation:c}})),this.clearFields()}onClearFields(){const e=this.querySelector("#form"),t=Array.from(e.querySelectorAll("custom-input"));this.clearFields(t)}clearFields(e){(e??Array.from(this.querySelector("#form").querySelectorAll("custom-input"))).forEach(r=>{var i;r.value="";const n=(i=r.shadowRoot)==null?void 0:i.querySelector("input");n&&(n.style.borderColor="#ccc")})}onClearAll(){this.clearFields(),this.dispatchEvent(new CustomEvent("clear-all",{bubbles:!0,composed:!0}))}}customElements.define("slope-form",H);class p{static toMeters(s){return`${Number(s.toFixed(2))} m`}static toKilometers(s){return`${Number(s.toFixed(2))} km`}static toPercent(s){return`${Number((s*100).toFixed(2))} %`}}class x extends HTMLElement{constructor(){super(...arguments);o(this,"tbody")}init(){this.innerHTML=`
      <div class="summary">
        <p><strong>Distancia total:</strong> <span class="total-dist">0.00 m</span></p>
        <p><strong>Desnivel total:</strong> <span class="total-desn">0.00 m</span></p>
        <p><strong>Pendiente media:</strong> <span class="avg-slope">0.00 %</span></p>
      </div>
      <table>
        <thead>
          <tr>
            <th>#</th><th>Dist.</th><th>Desn.</th><th>Pend.</th>
            <th class="hide-mobile">Long. ini</th><th class="hide-mobile">Long. fin</th><th class="hide-mobile">Alt. ini</th class="hide-mobile"><th>Alt. fin</th>
          </tr>
        </thead>
        <tbody class="segments-body"></tbody>
      </table>
    `,this.tbody=this.querySelector(".segments-body")}addSegment(e){const t=e.getSegments(),r=t[t.length-1];if(!r)return;const n=document.createElement("tr");n.innerHTML=`
      <td>${r.id}</td>
      <td>${r.distance.toFixed(2)} m</td>
      <td>${r.desnivel.toFixed(2)} m</td>
      <td>${(r.slope*100).toFixed(2)}%</td>
      <td class="hide-mobile">${r.initialLength} km</td>
      <td class="hide-mobile">${r.finalLength} km</td>
      <td class="hide-mobile">${r.initialElevation} m</td>
      <td class="hide-mobile">${r.finalElevation} m</td>
    `,this.tbody.appendChild(n),this.updateSummary(e)}reset(){this.tbody.innerHTML="",this.updateSummary({getTotalDistance:()=>0,getTotalDesnivel:()=>0,getAverageSlope:()=>0})}updateSummary(e){const t={dist:p.toMeters(e.getTotalDistance()),desn:p.toMeters(e.getTotalDesnivel()),slope:p.toPercent(e.getAverageSlope())};this.querySelector(".total-dist").textContent=t.dist,this.querySelector(".total-desn").textContent=t.desn,this.querySelector(".avg-slope").textContent=t.slope}}customElements.define("slope-result",x);class D extends HTMLElement{constructor(){super(...arguments);o(this,"analytics");o(this,"result");o(this,"formEl");o(this,"segmentHandler",async e=>this.onSegment(e));o(this,"clearAllHandler",async()=>this.onClearAll())}async connectedCallback(){const e=await v.fetchUrl("calculator.html");this.innerHTML=e,this.analytics=await f.create();const t=this.querySelector(".bottom-section");this.result=document.createElement("slope-result"),t.appendChild(this.result),this.result.init(),this.analytics.getSegments().forEach(()=>{this.result.addSegment(this.analytics)}),this.formEl=document.createElement("slope-form"),this.formEl.addEventListener("segment-submitted",this.segmentHandler),this.formEl.addEventListener("clear-all",this.clearAllHandler),this.querySelector(".top-section").appendChild(this.formEl)}disconnectedCallback(){this.formEl&&(this.formEl.removeEventListener("segment-submitted",this.segmentHandler),this.formEl.removeEventListener("clear-all",this.clearAllHandler))}async onSegment(e){const{detail:t}=e;await this.analytics.addSegment(t),this.result.addSegment(this.analytics)}async onClearAll(){await this.analytics.clearSegments(),this.result.reset()}}customElements.define("slope-calculator",D);class b extends HTMLElement{constructor(){super();o(this,"_input");o(this,"_validator");const e=this.attachShadow({mode:"open"}),t=document.createElement("style");t.textContent=`
      input {
        width: 100%;
        box-sizing: border-box;
        padding: 8px 16px;
        font-size: 1rem;
        border: 1px solid #ccc;
        border-radius: 0.4rem;
        outline: none;
        transition: border-color .2s;
      }
      input:focus {
        border-color: #888;
      }
    `,this._input=document.createElement("input"),e.append(t,this._input)}static get observedAttributes(){return["type","placeholder","value","required"]}attributeChangedCallback(e,t,r){switch(e){case"type":this._input.type=r??"text";break;case"placeholder":this._input.placeholder=r??"";break;case"value":this._input.value=r??"";break;case"required":this._input.required=r!==null;break}}connectedCallback(){for(const e of b.observedAttributes)if(this.hasAttribute(e)){const t=this.getAttribute(e);this.attributeChangedCallback(e,null,t)}}get value(){return this._input.value}set value(e){this._input.value=e,this.setAttribute("value",e)}set validator(e){this._validator=e}get validator(){return this._validator}validate(){let e={valid:!0};return this._validator?e=this._validator(this.value)||{valid:!0}:e.valid=this._input.checkValidity(),this._input.style.borderColor=e.valid?"#ccc":"red",e.valid}}customElements.define("custom-input",b);document.addEventListener("DOMContentLoaded",()=>{const l=document.getElementById("app");if(l){const s=document.createElement("slope-calculator");l.appendChild(s)}});
