var p=Object.defineProperty;var f=(i,l,e)=>l in i?p(i,l,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[l]=e;var o=(i,l,e)=>f(i,typeof l!="symbol"?l+"":l,e);(function(){const l=document.createElement("link").relList;if(l&&l.supports&&l.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))s(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function e(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(t){if(t.ep)return;t.ep=!0;const r=e(t);fetch(t.href,r)}})();class h{static async fetchUrl(l){const e="/slope_calc/"+l.replace(/^\/+/,"");try{const s=await fetch(e);if(!s.ok)throw new Error(`HTTP error! status: ${s.status} at ${e}`);return await s.text()}catch(s){throw console.error(`[Utils.fetchUrl] Error fetching "${e}":`,s),s}}}class g{constructor(){o(this,"segments",[])}addSegment(l){const{initialLength:e,finalLength:s,initialElevation:t,finalElevation:r}=l,n=(s-e)*1e3,a=r-t,u=n!==0?a/n:0,c={id:this.segments.length+1,initialLength:e,finalLength:s,initialElevation:t,finalElevation:r,distance:n,desnivel:a,slope:u};this.segments.push(c)}getSegments(){return[...this.segments]}getTotalDesnivel(){return this.segments.reduce((l,e)=>l+e.desnivel,0)}getTotalDistance(){return this.segments.reduce((l,e)=>l+e.distance,0)}getAverageSlope(){const l=this.getTotalDistance();return l!==0?this.getTotalDesnivel()/l:0}clearSegments(){this.segments=[]}}class b extends HTMLElement{constructor(){super(...arguments);o(this,"submitHandler",e=>this.onSubmit(e));o(this,"clearFieldsHandler",()=>this.onClearFields());o(this,"clearAllHandler",()=>this.onClearAll())}async connectedCallback(){const e=await h.fetchUrl("form.html");this.innerHTML=e;const s=this.querySelector("#form");Array.from(s.querySelectorAll("custom-input")).forEach(a=>{if(a.hasAttribute("required")&&(a.validator=c=>({valid:c.trim().length>0,message:"Este campo es obligatorio"})),a.getAttribute("data-validate")==="nonEmpty"){const c=a.getAttribute("data-error")||"No puede quedar vacío";a.validator=d=>({valid:d.trim()!=="",message:c})}}),s.addEventListener("submit",this.submitHandler),s.querySelector(".form-button-delete").addEventListener("click",this.clearFieldsHandler),s.querySelector("#deleteAll").addEventListener("click",this.clearAllHandler)}disconnectedCallback(){const e=this.querySelector("#form");if(e){e.removeEventListener("submit",this.submitHandler);const s=e.querySelector(".form-button-delete");s&&s.removeEventListener("click",this.clearFieldsHandler);const t=e.querySelector("#deleteAll");t&&t.removeEventListener("click",this.clearAllHandler)}}onSubmit(e){e.preventDefault();const s=this.querySelector("#form"),t=Array.from(s.querySelectorAll("custom-input"));let r=!0;if(t.forEach(d=>{d.validate()||(r=!1)}),!r){alert("No puede haber campos vacíos.");return}const[n,a,u,c]=t.map(d=>Number(d.value));this.dispatchEvent(new CustomEvent("segment-submitted",{bubbles:!0,composed:!0,detail:{initialLength:n,finalLength:a,initialElevation:u,finalElevation:c}})),this.clearFields()}onClearFields(){const e=this.querySelector("#form"),s=Array.from(e.querySelectorAll("custom-input"));this.clearFields(s)}clearFields(e){(e??Array.from(this.querySelector("#form").querySelectorAll("custom-input"))).forEach(t=>{var n;t.value="";const r=(n=t.shadowRoot)==null?void 0:n.querySelector("input");r&&(r.style.borderColor="#ccc")})}onClearAll(){this.clearFields(),this.dispatchEvent(new CustomEvent("clear-all",{bubbles:!0,composed:!0}))}}customElements.define("slope-form",b);class v extends HTMLElement{constructor(){super(...arguments);o(this,"tbody")}init(){this.innerHTML=`
      <div class="summary">
        <p><strong>Distancia total:</strong> <span class="total-dist">0.00 m</span></p>
        <p><strong>Desnivel total:</strong> <span class="total-desn">0.00 m</span></p>
        <p><strong>Pendiente media:</strong> <span class="avg-slope">0.00 %</span></p>
      </div>
      <table>
        <thead>
          <tr>
            <th>#</th><th>Dist.</th><th>Desn.</th><th>Pend.</th>
            <th class="hide-mobile">Long. ini</th><th class="hide-mobile">Long. fin</th><th class="hide-mobile">Alt. ini</th class="hide-mobile"><th>Alt. fin</th>
          </tr>
        </thead>
        <tbody class="segments-body"></tbody>
      </table>
    `,this.tbody=this.querySelector(".segments-body")}addSegment(e){const s=e.getSegments(),t=s[s.length-1];if(!t)return;const r=document.createElement("tr");r.innerHTML=`
      <td>${t.id}</td>
      <td>${t.distance.toFixed(2)} m</td>
      <td>${t.desnivel.toFixed(2)} m</td>
      <td>${(t.slope*100).toFixed(2)}%</td>
      <td class="hide-mobile">${t.initialLength} km</td>
      <td class="hide-mobile">${t.finalLength} km</td>
      <td class="hide-mobile">${t.initialElevation} m</td>
      <td class="hide-mobile">${t.finalElevation} m</td>
    `,this.tbody.appendChild(r),this.updateSummary(e)}reset(){this.tbody.innerHTML="",this.updateSummary({getTotalDistance:()=>0,getTotalDesnivel:()=>0,getAverageSlope:()=>0})}updateSummary(e){this.querySelector(".total-dist").textContent=e.getTotalDistance().toFixed(2)+" m",this.querySelector(".total-desn").textContent=e.getTotalDesnivel().toFixed(2)+" m",this.querySelector(".avg-slope").textContent=(e.getAverageSlope()*100).toFixed(2)+" %"}}customElements.define("slope-result",v);class y extends HTMLElement{constructor(){super(...arguments);o(this,"analytics",new g);o(this,"result");o(this,"formEl");o(this,"segmentHandler",e=>this.onSegment(e));o(this,"clearAllHandler",()=>this.onClearAll())}async connectedCallback(){const e=await h.fetchUrl("calculator.html");this.innerHTML=e;const s=this.querySelector(".top-section"),t=this.querySelector(".bottom-section");!s||!t||(this.result=document.createElement("slope-result"),t.appendChild(this.result),this.result.init(),this.formEl=document.createElement("slope-form"),this.formEl.addEventListener("segment-submitted",this.segmentHandler),this.formEl.addEventListener("clear-all",this.clearAllHandler),s.appendChild(this.formEl))}disconnectedCallback(){this.formEl&&(this.formEl.removeEventListener("segment-submitted",this.segmentHandler),this.formEl.removeEventListener("clear-all",this.clearAllHandler))}onSegment(e){const{detail:s}=e;this.analytics.addSegment(s),this.result.addSegment(this.analytics)}onClearAll(){this.analytics.clearSegments(),this.result.reset()}}customElements.define("slope-calculator",y);class m extends HTMLElement{constructor(){super();o(this,"_input");o(this,"_validator");const e=this.attachShadow({mode:"open"}),s=document.createElement("style");s.textContent=`
      input {
        width: 100%;
        box-sizing: border-box;
        padding: 8px 16px;
        font-size: 1rem;
        border: 1px solid #ccc;
        border-radius: 0.4rem;
        outline: none;
        transition: border-color .2s;
      }
      input:focus {
        border-color: #888;
      }
    `,this._input=document.createElement("input"),e.append(s,this._input)}static get observedAttributes(){return["type","placeholder","value","required"]}attributeChangedCallback(e,s,t){switch(e){case"type":this._input.type=t??"text";break;case"placeholder":this._input.placeholder=t??"";break;case"value":this._input.value=t??"";break;case"required":this._input.required=t!==null;break}}connectedCallback(){for(const e of m.observedAttributes)if(this.hasAttribute(e)){const s=this.getAttribute(e);this.attributeChangedCallback(e,null,s)}}get value(){return this._input.value}set value(e){this._input.value=e,this.setAttribute("value",e)}set validator(e){this._validator=e}get validator(){return this._validator}validate(){let e={valid:!0};return this._validator?e=this._validator(this.value)||{valid:!0}:e.valid=this._input.checkValidity(),this._input.style.borderColor=e.valid?"#ccc":"red",e.valid}}customElements.define("custom-input",m);document.addEventListener("DOMContentLoaded",()=>{const i=document.getElementById("app");if(i){const l=document.createElement("slope-calculator");i.appendChild(l)}});
