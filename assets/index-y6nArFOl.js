var v=Object.defineProperty;var E=(n,s,e)=>s in n?v(n,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[s]=e;var o=(n,s,e)=>E(n,typeof s!="symbol"?s+"":s,e);(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))t(r);new MutationObserver(r=>{for(const l of r)if(l.type==="childList")for(const i of l.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&t(i)}).observe(document,{childList:!0,subtree:!0});function e(r){const l={};return r.integrity&&(l.integrity=r.integrity),r.referrerPolicy&&(l.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?l.credentials="include":r.crossOrigin==="anonymous"?l.credentials="omit":l.credentials="same-origin",l}function t(r){if(r.ep)return;r.ep=!0;const l=e(r);fetch(r.href,l)}})();class f{static async fetchUrl(s){const e="/slope_calc/"+s.replace(/^\/+/,"");try{const t=await fetch(e);if(!t.ok)throw new Error(`HTTP error! status: ${t.status} at ${e}`);return await t.text()}catch(t){throw console.error(`[Utils.fetchUrl] Error fetching "${e}":`,t),t}}}const S="slopecalc",m="segments",A=1,w=()=>new Promise((n,s)=>{const e=indexedDB.open(S,A);e.onupgradeneeded=()=>{const t=e.result;t.objectStoreNames.contains(m)||t.createObjectStore(m,{keyPath:"id"})},e.onsuccess=()=>n(e.result),e.onerror=()=>s(e.error)}),C=n=>g("readwrite",s=>s.put(n)),L=()=>g("readonly",n=>new Promise(s=>{const e=n.getAll();e.onsuccess=()=>s(e.result)})),q=()=>g("readwrite",n=>{n.clear()}),g=async(n,s)=>{const t=(await w()).transaction(m,n),r=s(t.objectStore(m));return await new Promise((l,i)=>{t.oncomplete=()=>l(),t.onerror=()=>i(t.error),t.onabort=()=>i(t.error)}),r},p={save:C,getAll:L,clear:q};class b{constructor(s){o(this,"segments",[]);this.segments=s}static async create(){const s=await p.getAll();return new b(s)}async addSegment(s){const{initialLength:e,finalLength:t,initialElevation:r,finalElevation:l}=s,i=(t-e)*1e3,a=l-r,h=i!==0?a/i:0,d={id:this.segments.length+1,initialLength:e,finalLength:t,initialElevation:r,finalElevation:l,distance:i,desnivel:a,slope:h};this.segments.push(d),await p.save(d)}getSegments(){return[...this.segments]}getTotalDesnivel(){return this.segments.reduce((s,e)=>s+e.desnivel,0)}getTotalDistance(){return this.segments.reduce((s,e)=>s+e.distance,0)}getAverageSlope(){const s=this.getTotalDistance();return s!==0?this.getTotalDesnivel()/s:0}async clearSegments(){this.segments=[],await p.clear()}}class x extends HTMLElement{constructor(){super(...arguments);o(this,"submitHandler",e=>this.onSubmit(e));o(this,"clearFieldsHandler",()=>this.onClearFields());o(this,"clearAllHandler",()=>this.onClearAll())}async connectedCallback(){const e=await f.fetchUrl("form.html");this.innerHTML=e;const t=this.querySelector("#form");Array.from(t.querySelectorAll("custom-input")).forEach(a=>{if(a.hasAttribute("required")&&(a.validator=d=>({valid:d.trim().length>0,message:"Este campo es obligatorio"})),a.getAttribute("data-validate")==="nonEmpty"){const d=a.getAttribute("data-error")||"No puede quedar vacío";a.validator=u=>({valid:u.trim()!=="",message:d})}}),t.addEventListener("submit",this.submitHandler),t.querySelector(".form-button-delete").addEventListener("click",this.clearFieldsHandler),t.querySelector("#deleteAll").addEventListener("click",this.clearAllHandler)}disconnectedCallback(){const e=this.querySelector("#form");if(e){e.removeEventListener("submit",this.submitHandler);const t=e.querySelector(".form-button-delete");t&&t.removeEventListener("click",this.clearFieldsHandler);const r=e.querySelector("#deleteAll");r&&r.removeEventListener("click",this.clearAllHandler)}}onSubmit(e){e.preventDefault();const t=this.querySelector("#form"),r=Array.from(t.querySelectorAll("custom-input"));let l=!0;if(r.forEach(u=>{u.validate()||(l=!1)}),!l){alert("No puede haber campos vacíos.");return}const[i,a,h,d]=r.map(u=>Number(u.value));this.dispatchEvent(new CustomEvent("segment-submitted",{bubbles:!0,composed:!0,detail:{initialLength:i,finalLength:a,initialElevation:h,finalElevation:d}})),this.clearFields()}onClearFields(){const e=this.querySelector("#form"),t=Array.from(e.querySelectorAll("custom-input"));this.clearFields(t)}clearFields(e){(e??Array.from(this.querySelector("#form").querySelectorAll("custom-input"))).forEach(r=>{var i;r.value="";const l=(i=r.shadowRoot)==null?void 0:i.querySelector("input");l&&(l.style.borderColor="#ccc")})}onClearAll(){this.clearFields(),this.dispatchEvent(new CustomEvent("clear-all",{bubbles:!0,composed:!0}))}}customElements.define("slope-form",x);class c{static toMeters(s){return`${Number(s.toFixed(2))} m`}static toKilometers(s){return`${Number(s.toFixed(2))} km`}static toPercent(s){return`${Number((s*100).toFixed(2))} %`}}class H{constructor(s="Informe Desnivel"){o(this,"title");this.title=s}openPrintWindow(s){const e=window.open("","_blank","width=800,height=600");e&&(e.document.write(s),e.document.close(),e.focus(),e.print(),e.close())}generateHtml(s,e){return`
      <html>
        <head>
          <title>${this.title}</title>
          <style>
            body { font-family: Inter, sans-serif; padding: 1rem; }
            .summary p { margin: .5rem 0; }
            table { width: 100%; border-collapse: collapse; }
            th, td { padding: .5rem; border: 1px solid #ccc; }
            thead { background: #1e3a8a; color: #fff; }
          </style>
        </head>
        <body>
          <h1>${this.title}</h1>
          ${s}
          ${e}
        </body>
      </html>
    `}export(s,e){const t=this.generateHtml(s,e);this.openPrintWindow(t)}}class D extends HTMLElement{constructor(){super(...arguments);o(this,"tbody");o(this,"exportBtn");o(this,"titleInput");o(this,"toggleDefault");o(this,"titleControl")}async init(){const e=await f.fetchUrl("result.html");this.innerHTML=e,this.exportBtn=this.querySelector(".export-btn"),this.titleControl=this.querySelector(".title-control"),this.titleInput=this.querySelector("custom-input.title-input"),this.toggleDefault=this.querySelector(".toggle-default"),this.tbody=this.querySelector(".segments-body"),this.toggleDefault.addEventListener("change",()=>{const t=this.toggleDefault.checked;this.titleInput.hidden=t,t&&(this.titleInput.value="")}),this.exportBtn.addEventListener("click",()=>this.exportPdf())}addSegment(e){const t=e.getSegments(),r=t[t.length-1];if(!r)return;const l=document.createElement("tr");l.innerHTML=`
      <td>${r.id}</td>
      <td>${c.toMeters(r.distance)}</td>
      <td>${c.toMeters(r.desnivel)}</td>
      <td>${c.toPercent(r.slope)}</td>
      <td class="hide-mobile">${c.toKilometers(r.initialLength)}</td>
      <td class="hide-mobile">${c.toKilometers(r.finalLength)}</td>
      <td class="hide-mobile">${c.toMeters(r.initialElevation)}</td>
      <td class="hide-mobile">${c.toMeters(r.finalElevation)}</td>
    `,this.tbody.appendChild(l),this.updateSummary(e),this.showExportControls()}reset(){this.tbody.innerHTML="",this.updateSummary({getTotalDistance:()=>0,getTotalDesnivel:()=>0,getAverageSlope:()=>0}),this.exportBtn.hidden=!0,this.titleControl.hidden=!0,this.toggleDefault.checked=!0,this.titleInput.value="",this.titleInput.hidden=!0}updateSummary(e){const t={dist:c.toMeters(e.getTotalDistance()),desn:c.toMeters(e.getTotalDesnivel()),slope:c.toPercent(e.getAverageSlope())};this.querySelector(".total-dist").textContent=t.dist,this.querySelector(".total-desn").textContent=t.desn,this.querySelector(".avg-slope").textContent=t.slope}exportPdf(){const e=this.querySelector(".summary").outerHTML,t=this.querySelector("table").outerHTML,r=this.toggleDefault.checked?"":this.titleInput.value||"";new H(r).export(e,t)}showExportControls(){this.exportBtn.hidden=!1,this.titleControl.hidden=!1,this.titleInput.hidden=this.toggleDefault.checked}}customElements.define("slope-result",D);class M extends HTMLElement{constructor(){super(...arguments);o(this,"analytics");o(this,"result");o(this,"formEl");o(this,"segmentHandler",async e=>this.onSegment(e));o(this,"clearAllHandler",async()=>this.onClearAll())}async connectedCallback(){const e=await f.fetchUrl("calculator.html");this.innerHTML=e,this.analytics=await b.create();const t=this.querySelector(".bottom-section");this.result=document.createElement("slope-result"),t.appendChild(this.result),this.result.init(),this.analytics.getSegments().forEach(()=>{this.result.addSegment(this.analytics)}),this.formEl=document.createElement("slope-form"),this.formEl.addEventListener("segment-submitted",this.segmentHandler),this.formEl.addEventListener("clear-all",this.clearAllHandler),this.querySelector(".top-section").appendChild(this.formEl)}disconnectedCallback(){this.formEl&&(this.formEl.removeEventListener("segment-submitted",this.segmentHandler),this.formEl.removeEventListener("clear-all",this.clearAllHandler))}async onSegment(e){const{detail:t}=e;await this.analytics.addSegment(t),this.result.addSegment(this.analytics)}async onClearAll(){await this.analytics.clearSegments(),this.result.reset()}}customElements.define("slope-calculator",M);class y extends HTMLElement{constructor(){super();o(this,"_input");o(this,"_validator");const e=this.attachShadow({mode:"open"}),t=document.createElement("style");t.textContent=`
      input {
        width: 100%;
        box-sizing: border-box;
        padding: 8px 16px;
        font-size: 1rem;
        border: 1px solid #ccc;
        border-radius: 0.4rem;
        outline: none;
        transition: border-color .2s;
      }
      input:focus {
        border-color: #888;
      }
    `,this._input=document.createElement("input"),e.append(t,this._input)}static get observedAttributes(){return["type","placeholder","value","required"]}attributeChangedCallback(e,t,r){switch(e){case"type":this._input.type=r??"text";break;case"placeholder":this._input.placeholder=r??"";break;case"value":this._input.value=r??"";break;case"required":this._input.required=r!==null;break}}connectedCallback(){for(const e of y.observedAttributes)if(this.hasAttribute(e)){const t=this.getAttribute(e);this.attributeChangedCallback(e,null,t)}}get value(){return this._input.value}set value(e){this._input.value=e,this.setAttribute("value",e)}set validator(e){this._validator=e}get validator(){return this._validator}validate(){let e={valid:!0};return this._validator?e=this._validator(this.value)||{valid:!0}:e.valid=this._input.checkValidity(),this._input.style.borderColor=e.valid?"#ccc":"red",e.valid}}customElements.define("custom-input",y);document.addEventListener("DOMContentLoaded",()=>{const n=document.getElementById("app");if(n){const s=document.createElement("slope-calculator");n.appendChild(s)}});
